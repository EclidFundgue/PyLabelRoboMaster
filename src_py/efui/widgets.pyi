from .surface import Surface

class Event: ...

class Base:
    def __init__(self, x: int = 0, y: int = 0, w: int = 0, h: int = 0):
        self.x: int
        self.y: int
        self.w: int
        self.h: int
        self.layer: int # default 0
        self.redraw_parent: bool # default True
        self.interactive_when_active: bool # default True
        self.alive: bool # default True, read only
        self.active: bool # default False, read only

    # ---------- Built-in Methods ---------- #
    def addChild(self, child: Base) -> None: ...
    def removeChild(self, child: Base) -> None: ...
    def redraw(self) -> None: ...

    # ---------- Mouse Event Slots ---------- #
    def onLeftClick(self, x: int, y: int) -> None: ...
    def onMidClick(self, x: int, y: int) -> None: ...
    def onRightClick(self, x: int, y: int) -> None: ...

    def onLeftPress(self, x: int, y: int) -> None: ...
    def onMidPress(self, x: int, y: int) -> None: ...
    def onRightPress(self, x: int, y: int) -> None: ...

    def onLeftDrag(self, vx: int, vy: int) -> None: ...
    def onMidDrag(self, vx: int, vy: int) -> None: ...
    def onRightDrag(self, vx: int, vy: int) -> None: ...

    def onLeftRelease(self) -> None: ...
    def onMidRelease(self) -> None: ...
    def onRightRelease(self) -> None: ...

    # ---------- Draw Slots ---------- #
    def draw(self, surface: Surface, x: int, y: int) -> None: ...

class Root(Base):
    def __init__(self, surface: Surface):
        self.surface: Surface

    def update(self, event: Event) -> None: ...
    def draw(self) -> None: ...